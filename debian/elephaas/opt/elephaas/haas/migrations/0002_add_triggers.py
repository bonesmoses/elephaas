# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-17 20:18
from __future__ import unicode_literals

from django.db import migrations

class Migration(migrations.Migration):

    dependencies = [
        ('haas', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION sp_audit_stamps()
            RETURNS TRIGGER AS
            $$
            BEGIN
              -- All inserts get a new timestamp to mark their creation.
              -- Any updates should inherit the timestamp of the old version.
              -- In either case, a modified timestamp is applied to track
              -- the last time the row was changed.

              IF TG_OP = 'INSERT' THEN
                NEW.created_dt = now();
              ELSE
                NEW.created_dt = OLD.created_dt;
              END IF;

              NEW.modified_dt = now();

              RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
            """
            """
            CREATE TRIGGER t_env_audit_stamp_b_iu
            BEFORE INSERT OR UPDATE
                ON ele_environment
               FOR EACH ROW EXECUTE PROCEDURE sp_audit_stamps();
            """
            """
            CREATE TRIGGER t_herd_audit_stamp_b_iu
            BEFORE INSERT OR UPDATE
                ON ele_herd
               FOR EACH ROW EXECUTE PROCEDURE sp_audit_stamps();
            """
            """
            CREATE TRIGGER t_instance_audit_stamp_b_iu
            BEFORE INSERT OR UPDATE
                ON ele_instance
               FOR EACH ROW EXECUTE PROCEDURE sp_audit_stamps();
            """
            """
            CREATE TRIGGER t_server_audit_stamp_b_iu
            BEFORE INSERT OR UPDATE
                ON ele_server
               FOR EACH ROW EXECUTE PROCEDURE sp_audit_stamps();
            """
        )
    ]
